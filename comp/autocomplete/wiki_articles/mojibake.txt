mojibake japanese ipa mod͡ʑibake character transformation is the garbled or gibberish text that is the result of text being decoded using an unintended character encoding the result is a systematic replacement of symbols with completely unrelated ones often from a different writing system this display may include the generic replacement character in places where the binary representation is considered invalid a replacement can also involve multiple consecutive symbols as viewed in one encoding when the same binary code constitutes one symbol in the other encoding this is either because of differing constant length encoding as in asian bit encodings vs european bit encodings or the use of variable length encodings notably utf and utf failed rendering of glyphs due to either missing fonts or missing glyphs in a font is a different issue that is not to be confused with mojibake symptoms of this failed rendering include blocks with the code point displayed in hexadecimal or using the generic replacement character importantly these replacements are valid and are the result of correct error handling by the software causes to correctly reproduce the original text that was encoded the correspondence between the encoded data and the notion of its encoding must be preserved i.e the source and target encoding standards must be the same as mojibake is the instance of non-compliance between these it can be achieved by manipulating the data itself or just relabelling it mojibake is often seen with text data that have been tagged with a wrong encoding it may not even be tagged at all but moved between computers with different default encodings a major source of trouble are communication protocols that rely on settings on each computer rather than sending or storing metadata together with the data the differing default settings between computers are in part due to differing deployments of unicode among operating system families and partly the legacy encodings specializations for different writing systems of human languages whereas linux distributions mostly switched to utf in microsoft windows generally uses utf and sometimes uses bit code pages for text files in different languages for some writing systems such as japanese several encodings have historically been employed causing users to see mojibake relatively often as an example the word mojibake itself stored as euc-jp might be incorrectly displayed as ms or if interpreted as shift-jis or as in software that assumes text to be in the windows or iso encodings usually labelled western or western european this is further exacerbated if other locales are involved the same text stored as utf appears as if interpreted as shift-jis as if interpreted as western or for example as if interpreted as being in a gbk mainland china locale underspecification if the encoding is not specified it is up to the software to decide it by other means depending on the type of software the typical solution is either configuration or charset detection heuristics both are prone to mis-prediction the encoding of text files is affected by locale setting which depends on the user's language brand of operating system and many other conditions therefore the assumed encoding is systematically wrong for files that come from a computer with a different setting or even from a differently localized software within the same system for unicode one solution is to use a byte order mark but for source code and other machine readable text many parsers do not tolerate this another is storing the encoding as metadata in the file system file systems that support extended file attributes can store this as user.charset this also requires support in software that wants to take advantage of it but does not disturb other software while a few encodings are easy to detect such as utf there are many that are hard to distinguish see charset detection a web browser may not be able to distinguish a page coded in euc-jp and another in shift-jis if the encoding is not assigned explicitly using http headers sent along with the documents or using the html document's meta tags that are used to substitute for missing http headers if the server cannot be configured to send the proper http headers see character encodings in html mis-specification mojibake also occurs when the encoding is incorrectly specified this often happens between encodings that are similar for example the eudora email client for windows was known to send emails labelled as iso that were in reality windows windows contains extra printable characters in the c range the most frequently seen being curved quotation marks and extra dashes that were not displayed properly in software complying with the iso standard this especially affected software running under other operating systems such as unix user oversight of the encodings still in common use many originated from taking ascii and appending atop it as a result these encodings are partially compatible with each other examples of this include windows and iso people thus may mistake the expanded encoding set they are using with plain ascii overspecification when there are layers of protocols each trying to specify the encoding based on different information the least certain information may be misleading to the recipient for example consider a web server serving a static html file over http the character set may be communicated to the client in any number of ways in the http header this information can be based on server configuration for instance when serving a file off disk or controlled by the application running on the server for dynamic websites in the file as an html meta tag http-equiv or charset or the encoding attribute of an xml declaration this is the encoding that the author meant to save the particular file in in the file as a byte order mark this is the encoding that the author's editor actually saved it in unless an accidental encoding conversion has happened by opening it in one encoding and saving it in another this will be correct it is however only available in unicode encodings such as utf or utf lack of hardware or software support much older hardware is typically designed to support only one character set and the character set typically cannot be altered the character table contained within the display firmware will be localized to have characters for the country the device is to be sold in and typically the table differs from country to country as such these systems will potentially display mojibake when loading text generated on a system from a different country likewise many early operating systems do not support multiple encoding formats and thus will end up displaying mojibake if made to display non-standard text—early versions of microsoft windows and palm os for example are localized on a per-country basis and will only support encoding standards relevant to the country the localized version will be sold in and will display mojibake if a file containing a text in a different encoding format from the version that the os is designed to support is opened resolutions applications using utf as a default encoding may achieve a greater degree of interoperability because of its widespread use and backward compatibility with us-ascii utf also has the ability to be directly recognised by a simple algorithm so that well written software should be able to avoid mixing utf up with other encodings the difficulty of resolving an instance of mojibake varies depending on the application within which it occurs and the causes of it two of the most common applications in which mojibake may occur are web browsers and word processors modern browsers and word processors often support a wide array of character encodings browsers often allow a user to change their rendering engine's encoding setting on the fly while word processors allow the user to select the appropriate encoding when opening a file it may take some trial and error for users to find the correct encoding the problem gets more complicated when it occurs in an application that normally does not support a wide range of character encoding such as in a non-unicode computer game in this case the user must change the operating system's encoding settings to match that of the game however changing the system-wide encoding settings can also cause mojibake in pre-existing applications in windows xp or later a user also has the option to use microsoft applocale an application that allows the changing of per-application locale settings even so changing the operating system encoding settings is not possible on earlier operating systems such as windows to resolve this issue on earlier operating systems a user would have to use third party font rendering applications problems in different writing systems english mojibake in english texts generally occurs in punctuation such as em dashes en dashes and curly quotes but rarely in character text since most encodings agree with ascii on the encoding of the english alphabet for example the pound sign will appear as if it was encoded by the sender as utf but interpreted by the recipient as one of the western european encodings cp or iso if iterated using cp this can lead to and so on similarly the right single quotation mark when encoded in utf and decoded using windows becomes and so on some computers did in older eras have vendor-specific encodings which caused mismatch also for english text commodore brand bit computers used petscii encoding particularly notable for inverting the upper and lower case compared to standard ascii petscii printers worked fine on other computers of the era but inverted the case of all letters ibm mainframes use the ebcdic encoding which does not match ascii at all other western european languages the alphabets of the north germanic languages catalan romanian finnish french german italian portuguese and spanish are all extensions of the latin alphabet the additional characters are typically the ones that become corrupted making texts only mildly unreadable with mojibake in finnish and swedish and are present in some finnish loanwords marginally in swedish mainly also in loanwords in catalan in norwegian and danish as well as optional acute accents on etc for disambiguation in dutch and in german in faroese in icelandic in french in italian in spanish in portuguese no longer used in irish in scottish gaelic in romanian in british english and are rarely used and their uppercase counterparts if applicable these are languages for which the iso character set also known as latin or western has been in use however iso has been obsoleted by two competing standards the backward compatible windows and the slightly altered iso both add the euro sign and the french but otherwise any confusion of these three character sets does not create mojibake in these languages furthermore it is always safe to interpret iso as windows and fairly safe to interpret it as iso in particular with respect to the euro sign which replaces the rarely used currency sign however with the advent of utf mojibake has become more common in certain scenarios e.g exchange of text files between unix and windows computers due to utf-8's incompatibility with latin and windows but utf has the ability to be directly recognised by a simple algorithm so that well written software should be able to avoid mixing utf up with other encodings so this was most common when many had software not supporting utf most of these languages were supported by ms-dos default cp and other machine default encodings except ascii so problems when buying an operating system version were less common windows and ms-dos are not compatible however in swedish norwegian danish and german vowels are rarely repeated and it is usually obvious when one character gets corrupted e.g the second letter in the swedish word kärlek love when it is encoded in utf but decoded in western producing kã⁠¤rlek or für in german which becomes fã¼r this way even though the reader has to guess what the original letter is almost all texts remain legible finnish on the other hand frequently uses repeating vowels in words like hääy wedding night which can make corrupted text very hard to read e.g hääy appears as hã⁠¤ã⁠¤y icelandic has ten possibly confounding characters and faroese has eight making many words almost completely unintelligible when corrupted e.g icelandic jóðl outstanding hospitality appears as jã³ã°l in german buchstabensalat letter salad is a common term for this phenomenon in spanish deformación literally deformation is used and in portuguese desformatação literally deformatting is used some users transliterate their writing when using a computer either by omitting the problematic diacritics or by using digraph replacements aa ae oe ue etc thus an author might write ueber instead of ber which is standard practice in german when umlauts are not available the latter practice seems to be better tolerated in the german language sphere than in the nordic countries for example in norwegian digraphs are associated with archaic danish and may be used jokingly however digraphs are useful in communication with other parts of the world as an example the norwegian football player ole gunnar solskjær had his last name spelled solskjaer on his uniform when he played for manchester united an artifact of utf misinterpreted as iso ring meg n being rendered as ring meg n was seen in in an sms scam targeting norway the same problem occurs also in romanian see these examples central and eastern european users of central and eastern european languages can also be affected because most computers were not connected to any network during the mid to late-1980s there were different character encodings for every language with diacritical characters see iso/iec and koi often also varying by operating system hungarian in hungarian the phenomenon is referred to as betűszemét meaning letter garbage hungarian has been particularly susceptible as it contains the accented letters all present in the latin character set plus the two characters and which are not in latin these two characters can be correctly encoded in latin windows and unicode however before unicode became common in e-mail clients e-mails containing hungarian text often had the letters and corrupted sometimes to the point of unrecognizability it is common to respond to a corrupted e-mail with the nonsense phrase rvíztűr tükörfúrógép literally flood-resistant mirror-drilling machine which contains all accented characters used in hungarian examples polish prior to the creation of iso in users of various computing platforms used their own character encodings such as amigapl on amiga atari club on atari st and masovia ibm cp mazovia and windows cp on ibm pcs polish companies selling early dos computers created their own mutually-incompatible ways to encode polish characters and simply reprogrammed the eproms of the video cards typically cga ega or hercules to provide hardware code pages with the needed glyphs for polish—arbitrarily located without reference to where other computer sellers had placed them the situation began to improve when after pressure from academic and user groups iso succeeded as the internet standard with limited support of the dominant vendors software today largely replaced by unicode with the numerous problems caused by the variety of encodings even today some users tend to refer to polish diacritical characters as krzaczki kʂät͜ʂ.ki lit little shrubs russian and other cyrillic alphabets mojibake is colloquially called krakozyabry krɐkɐˈzʲæbr in russian which was and remains complicated by several systems for encoding cyrillic the soviet union and early russian federation developed koi encodings kod obmena informatsiey which translates to code for information exchange this began with cyrillic-only bit koi based on ascii but with latin and some other characters replaced with cyrillic letters then came bit koi encoding that is an ascii extension which encodes cyrillic letters only with high-bit set octets corresponding to bit codes from koi it is for this reason that koi text even russian remains partially readable after stripping the eighth bit which was considered as a major advantage in the age of bitmime-unaware email systems for example words shkola russkogo yazyka encoded in koi and then passed through the high bit stripping process end up rendered as kola russkogo qzyka eventually koi gained different flavors for russian and bulgarian koi8-r ukrainian koi8-u belarusian koi8-ru and even tajik koi8-t meanwhile in the west code page supported ukrainian and belarusian as well as russian and bulgarian in ms-dos for microsoft windows code page added support for serbian and other slavic variants of cyrillic most recently the unicode encoding includes code points for virtually all characters in all languages including all cyrillic characters before unicode it was necessary to match text encoding with a font using the same encoding system failure to do this produced unreadable gibberish whose specific appearance varied depending on the exact combination of text and font encoding for example attempting to view non-unicode cyrillic text using a font that is limited to the latin alphabet or using the default western encoding typically results in text that consists almost entirely of capitalized vowels with diacritical marks e.g koi biblioteka library becomes while shkola russkogo yazyka russian-language school becomes using code page to view text in koi or vice versa results in garbled text that consists mostly of capital letters koi and code page share the same ascii region but koi has uppercase letters in the region where code page has lowercase and vice versa during the early years of the russian sector of the world wide web both koi and code page were common nearly all websites now use unicode but as of november an estimated of all web pages worldwide all languages included are still encoded in code page while less than of sites are still encoded in koi8-r though the html standard includes the ability to specify the encoding for any given web page in its source this is sometimes neglected forcing the user to switch encodings in the browser manually in bulgarian mojibake is often called majmunica meaning monkey's alphabet in serbian it is called ubre meaning trash unlike the former ussr south slavs never used something like koi and code page was the dominant cyrillic encoding there before unicode therefore these languages experienced fewer encoding incompatibility troubles than russian in the s bulgarian computers used their own mik encoding which is superficially similar to although incompatible with cp yugoslav languages croatian bosnian serbian the seceding varieties of serbo-croatian language and slovenian add to the basic latin alphabet the letters and their capital counterparts only and in slovenian officially although others are used when needed mostly in foreign names as well all of these letters are defined in latin and windows while only some exist in the usual os-default windows and are there because of some other languages although mojibake can occur with any of these characters the letters that are not included in windows are much more prone to errors thus even nowadays is often displayed as although and are never used in slavic languages when confined to basic ascii most user names for example common replacements are s dj c c z capital forms analogously with dj or dj depending on word case all of these replacements introduce ambiguities so reconstructing the original from such a form is usually done manually if required the windows encoding is important because the english versions of the windows operating system are most widespread not localized ones the reasons for this include a relatively small and fragmented market increasing the price of high quality localization a high degree of software piracy in turn caused by high price of software compared to income which discourages localization efforts and people preferring english versions of windows and other software the drive to differentiate croatian from serbian bosnian from croatian and serbian and now even montenegrin from the other three creates many problems there are many different localizations using different standards and of different quality there are no common translations for the vast amount of computer terminology originating in english in the end people use english loanwords kompjuter for computer kompajlirati for compile etc and if they are unaccustomed to the translated terms they may not understand what some option in a menu is supposed to do based on the translated phrase therefore people who understand english as well as those who are accustomed to english terminology who are most because english terminology is also mostly taught in schools because of these problems regularly choose the original english versions of non-specialist software when cyrillic script is used for macedonian and partially serbian the problem is similar to other cyrillic-based scripts newer versions of english windows allow the code page to be changed older versions require special english versions with this support but this setting can be and often was incorrectly set for example windows and windows me can be set to most non-right-to-left single-byte code pages including but only at install time caucasian languages the writing systems of certain languages of the caucasus region including the scripts of georgian and armenian may produce mojibake this problem is particularly acute in the case of armscii or armscii a set of obsolete character encodings for the armenian alphabet which have been superseded by unicode standards armscii is not widely used because of a lack of support in the computer industry for example microsoft windows does not support it asian encodings another type of mojibake occurs when text encoded in a single-byte encoding is erroneously parsed in a multi-byte encoding such as one of the encodings for east asian languages with this kind of mojibake more than one typically two characters are corrupted at once for example if the swedish word kärlek is encoded in windows but decoded using gbk it will appear as k鋜lek where r is parsed as compared to the above mojibake this is harder to read since letters unrelated to the problematic or are missing and is especially problematic for short words starting with or e.g n becomes since two letters are combined the mojibake also seems more random over variants compared to the normal three not counting the rarer capitals in some rare cases an entire text string which happens to include a pattern of particular word lengths such as the sentence bush hid the facts may be misinterpreted vietnamese in vietnamese the phenomenon is called ch ma hán–nôm ghost characters or loạn m from chinese luànm it can occur when a computer tries to decode text encoded in utf as windows tcvn or vni in vietnam ch ma was commonly seen on computers that ran pre-vista versions of windows or cheap mobile phones japanese in japan mojibake is especially problematic as there are many different japanese text encodings alongside unicode encodings utf and utf there are other standard encodings such as shift-jis windows machines and euc-jp unix systems even to this day mojibake is often encountered by both japanese and non-japanese people when attempting to run software written for the japanese market chinese in chinese the same phenomenon is called luàn m pinyin simplified chinese traditional chinese meaning chaotic code and can occur when computerised text is encoded in one chinese character encoding but is displayed using the wrong encoding when this occurs it is often possible to fix the issue by switching the character encoding without loss of data the situation is complicated because of the existence of several chinese character encoding systems in use the most common ones being unicode big and guobiao with several backward compatible versions and the possibility of chinese characters being encoded using japanese encoding it is relatively easy to identify the original encoding when luànm occurs in guobiao encodings an additional problem in chinese occurs when rare or antiquated characters many of which are still used in personal or place names do not exist in some encodings examples of this are the big encoding's lack of the xuān in the name of taiwanese politician wang chien-shien chinese pinyin wáng jiànxuān the kūn in the name of yu shyi-kun simplified chinese traditional chinese pinyin yóu xíkūn and the zh in the name of singer david tao chinese pinyin táo zh gb s lack of the róng in ex-prc premier zhu rongji chinese pinyin zh róngj and gbk's lack of the copyright symbol newspapers have dealt with missing characters in various ways including using image editing software to synthesize them by combining other radicals and characters using a picture of the personalities in the case of people's names or simply substituting homophones in the hope that readers would be able to make the correct inference indic text a similar effect can occur in brahmic or indic scripts of south asia used in such indo-aryan or indic languages as hindustani hindi-urdu bengali punjabi marathi and others even if the character set employed is properly recognized by the application this is because in many indic scripts the rules by which individual letter symbols combine to create symbols for syllables may not be properly understood by a computer missing the appropriate software even if the glyphs for the individual letter forms are available one example of this is the old wikipedia logo which attempts to show the character analogous to wi the first syllable of wikipedia on each of many puzzle pieces the puzzle piece meant to bear the devanagari character for wi instead used to display the wa character followed by an unpaired i modifier vowel easily recognizable as mojibake generated by a computer not configured to display indic text the logo as redesigned as of may has fixed these errors the idea of plain text requires the operating system to provide a font to display unicode codes this font is different from os to os for singhala and it makes orthographically incorrect glyphs for some letters syllables across all operating systems for instance the reph the short form for r is a diacritic that normally goes on top of a plain letter however it is wrong to go on top of some letters like ya or la in specific contexts for sanskritic words or names inherited by modern languages such as iast kārya or iast ry it is apt to put it on top of these letters by contrast for similar sounds in modern languages which result from their specific rules it is not put on top such as the word iast karaṇāry a stem form of the common word iast karaṇārā/r in the marathi language but it happens in most operating systems this appears to be a fault of internal programming of the fonts in mac os and ios the muurdhaja l dark l and u combination and its long form both yield wrong shapes some indic and indic-derived scripts most notably lao were not officially supported by windows xp until the release of vista however various sites have made free-to-download fonts burmese due to western sanctions and the late arrival of burmese language support in computers much of the early burmese localization was homegrown without international cooperation the prevailing means of burmese support is via the zawgyi font a font that was created as a unicode font but was in fact only partially unicode compliant in the zawgyi font some codepoints for burmese script were implemented as specified in unicode but others were not the unicode consortium refers to this as ad hoc font encodings with the advent of mobile phones mobile vendors such as samsung and huawei simply replaced the unicode compliant system fonts with zawgyi versions due to these ad hoc encodings communications between users of zawgyi and unicode would render as garbled text to get around this issue content producers would make posts in both zawgyi and unicode myanmar government designated october as u-day to officially switch to unicode the full transition was estimated to take two years african languages in certain writing systems of africa unencoded text is unreadable texts that may produce mojibake include those from the horn of africa such as the ge'ez script in ethiopia and eritrea used for amharic tigre and other languages and the somali language which employs the osmanya alphabet in southern africa the mwangwego alphabet is used to write languages of malawi and the mandombe alphabet was created for the democratic republic of the congo but these are not generally supported various other writing systems native to west africa present similar problems such as the n'ko alphabet used for manding languages in guinea and the vai syllabary used in liberia arabic another affected language is arabic see below in which text becomes completely unreadable when the encodings do not match examples the examples in this article do not have utf as browser setting because utf is easily recognisable so if a browser supports utf it should recognise it automatically and not try to interpret something else as utf see also code point replacement character substitute character newline the conventions for representing the line break differ between windows and unix systems though most software supports both conventions which is trivial software that must preserve or display the difference e.g version control systems and data comparison tools can get substantially more difficult to use if not adhering to one convention byte order mark the most in-band way to store the encoding together with the data prepend it this is by intention invisible to humans using compliant software but will by design be perceived as garbage characters to incompliant software including many interpreters html entities an encoding of special characters in html mostly optional but required for certain characters to escape interpretation as markup while failure to apply this transformation is a vulnerability see cross-site scripting applying it too many times results in garbling of these characters for example the quotation mark becomes quot amp;quot amp;amp;quot and so on bush hid the facts references external links the dictionary definition of mojibake at wiktionary media related to mojibake at wikimedia commons